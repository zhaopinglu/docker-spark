version: "2.1"

services:
  namenode:
    image: bde2020/hadoop-namenode:2.0.0-hadoop2.7.4-java8
    volumes:
      - sparknamenode:/hadoop/dfs/name
    environment:
      CLUSTER_NAME: test
      CORE_CONF_fs_defaultFS: hdfs://namenode:8020
    healthcheck:
      interval: 5s
      retries: 100 
    ports:
      - 50070:50070

  datanode:
    image: bde2020/hadoop-datanode:2.0.0-hadoop2.7.4-java8
    volumes:
      - sparkdatanode:/hadoop/dfs/data
    environment:
      CORE_CONF_fs_defaultFS: hdfs://namenode:8020
      SERVICE_PRECONDITION: "namenode:50070"
    depends_on:
      namenode:
        condition: service_healthy
    healthcheck:
      interval: 5s
      retries: 100 

  spark-master:
    image: bde2020/spark-master:2.4.5-hadoop2.7
    container_name: spark-master
    ports:
      - 8080:8080
      - 7077:7077
    environment:
      CORE_CONF_fs_defaultFS: hdfs://namenode:8020
      SERVICE_PRECONDITION: "namenode:50070 datanode:50075"
    depends_on:
      namenode:
        condition: service_healthy
      datanode:
        condition: service_healthy
    healthcheck:
      interval: 5s
      retries: 100 

  spark-worker-1:
    image: bde2020/spark-worker:2.4.5-hadoop2.7
    container_name: spark-worker-1
    environment:
      - "SPARK_MASTER=spark://spark-master:7077"
    environment:
      CORE_CONF_fs_defaultFS: hdfs://namenode:8020
      SERVICE_PRECONDITION: "spark-master:8080"

  spark-worker-2:
    image: bde2020/spark-worker:2.4.5-hadoop2.7
    container_name: spark-worker-2
    environment:
      - "SPARK_MASTER=spark://spark-master:7077"
    environment:
      CORE_CONF_fs_defaultFS: hdfs://namenode:8020
      SERVICE_PRECONDITION: "spark-master:8080"

volumes:
  sparknamenode:
  sparkdatanode:
